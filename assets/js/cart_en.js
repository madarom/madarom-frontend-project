const api_url="https://madarom-project-production.up.railway.app/api";let cartItems=[];function formatPrice(t){return new Intl.NumberFormat("en-US",{style:"currency",currency:"USD"}).format(t)}async function fetchCartItems(){const t=sessionStorage.getItem("token");if(!t){console.warn("Aucun token trouvé → utilisateur non connecté, récupération depuis localStorage.");const t=JSON.parse(localStorage.getItem("cart"))||[],e=await Promise.all(t.map(async t=>{const e=await fetchProductDetails(t.product_id);return e?{...e,quantity:t.quantity}:null}));return cartItems=e.filter(t=>null!==t),void updateCartDisplay()}try{const e=await fetch(`${api_url}/cart`,{headers:{Authorization:`Bearer ${t}`}});if(!e.ok)return console.error("Erreur API récupération panier:",e.status),cartItems=[],void updateCartDisplay();const n=await e.json(),a=await Promise.all(n.map(async t=>{const e=await fetchProductDetails(t.product_id);return e?{...e,quantity:t.quantity}:null}));cartItems=a.filter(t=>null!==t),updateCartDisplay()}catch(t){console.error("Erreur réseau récupération panier:",t),cartItems=[],updateCartDisplay()}}async function fetchProductDetails(t){try{const e=await fetch(`${api_url}/products/details/${t}`);if(!e.ok)return console.warn(`Erreur produit ${t} : ${e.status}`),null;const n=await e.json(),a=parseFloat(n.active_price?.amount??0);return{id:n.id,name_latin:n.name_latin,name_en:n.name_en,image_path:n.image_path,price:a}}catch(e){return console.error(`Erreur réseau détails produit ${t}:`,e),null}}function strictObject(t){return new Proxy(t,{get(t,e){if(!(e in t))throw new Error(`La propriété "${e}" est manquante !`);return t[e]}})}function updateCartDisplay(){const t=document.getElementById("cart-container"),e=document.getElementById("summary-items"),n=document.getElementById("btn-open-clear-cart");if(!t||!e||!n)return void console.error("Un ou plusieurs éléments HTML du panier sont manquants !");t.innerHTML="",e.innerHTML="";let a=0;if(0===cartItems.length){t.innerHTML="<p class='text-gray-500 italic'>Votre panier est vide.</p>";const e=document.getElementById("total-amount");return e&&(e.textContent=formatPrice(0)),void n.classList.add("hidden")}n.classList.remove("hidden"),cartItems.forEach((e,n)=>{const r=strictObject(e),o=r.price*r.quantity;a+=o;const s=document.createElement("div");s.className="relative flex-none w-full sm:w-auto snap-start flex flex-col sm:flex-row sm:items-center gap-4 border rounded-lg p-4 shadow-sm bg-white",s.innerHTML+=`\n      <button aria-label="Supprimer produit" title="Supprimer" onclick="removeProduct(${n})"\n        class="absolute top-2 right-2 danger text-2xl font-bold leading-none z-10">\n        &times;\n      </button>\n  \n      <img src="https://www.madarom.net/assets/${r.image_path??"assets/img/p1.png"}" alt="${r.name_en}"\n        class="w-28 h-28 sm:w-20 sm:h-20 object-cover rounded-lg mx-auto sm:mx-0" />\n  \n      <div class="flex flex-col flex-1 text-center sm:text-left gap-2">\n        <h3 class="font-semibold text-base sm:text-lg text-primary">${r.name_latin}</h3>\n        <p class="text-gray-500 text-sm">Prix Unitaire : <span class="font-medium">${formatPrice(r.price)}</span></p>\n  \n        <div class="flex justify-center sm:justify-start items-center gap-2 mt-1">\n          <button class="w-8 h-8 bg-gray-200 hover:bg-gray-300 text-xl rounded" onclick="changeQuantity(${n}, -1)">−</button>\n          <input type="number" min="1" value="${r.quantity}" \n            class="w-12 text-center border border-gray-300 rounded py-1 text-base" \n            onchange="onQuantityInputChange(event, ${n})" />\n          <button class="w-8 h-8 bg-gray-200 hover:bg-gray-300 text-xl rounded" onclick="changeQuantity(${n}, 1)">+</button>\n        </div>\n      </div>\n  \n      <div class="flex flex-col items-center sm:items-end gap-2 mt-3 sm:mt-0 min-w-[80px]">\n        <div class="font-bold text-lg text-teal-700">${formatPrice(o)}</div>\n      </div>\n    `,t.appendChild(s)});const r=document.createElement("div");r.className="rounded-lg text-sm bg-white",r.innerHTML='\n    <div class="rounded-md text-sm text-gray-400 text-left">\n      Validez votre panier pour recevoir un devis personnalisé et procéder à une demande de bon de commande.\n    </div>\n  ',e.appendChild(r);const o=document.getElementById("total-amount");o&&(o.textContent=formatPrice(a))}async function updateCartQuantity(t,e){const n=sessionStorage.getItem("token");if(!n){let n=JSON.parse(localStorage.getItem("cart"))||[];const a=n.find(e=>e.product_id===t);return!!a&&(a.quantity=e,localStorage.setItem("cart",JSON.stringify(n)),!0)}try{return(await fetch(`${api_url}/cart/${t}`,{method:"PUT",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify({quantity:e})})).ok}catch(t){return console.error("Erreur réseau mise à jour:",t),!1}}async function removeProductFromCart(t){const e=sessionStorage.getItem("token");if(!e){let e=JSON.parse(localStorage.getItem("cart"))||[];return e=e.filter(e=>e.product_id!==t),localStorage.setItem("cart",JSON.stringify(e)),!0}try{return(await fetch(`${api_url}/cart/${t}`,{method:"DELETE",headers:{Authorization:`Bearer ${e}`}})).ok}catch(t){return console.error("Erreur suppression produit:",t),!1}}window.changeQuantity=async function(t,e){const n=cartItems[t],a=n.quantity+e;if(a<1)return;await updateCartQuantity(n.id,a)&&(cartItems[t].quantity=a,updateCartDisplay())},window.onQuantityInputChange=async function(t,e){let n=parseInt(t.target.value);(isNaN(n)||n<1)&&(n=1,t.target.value=n);const a=cartItems[e];await updateCartQuantity(a.id,n)?(a.quantity=n,updateCartDisplay()):t.target.value=a.quantity};let productToRemoveIndex=null;async function clearCart(){const t=sessionStorage.getItem("token");if(!t)return localStorage.removeItem("cart"),cartItems=[],void updateCartDisplay();const e=document.getElementById("btn-open-clear-cart"),n=document.getElementById("loadingSpinner"),a=document.getElementById("confirmText"),r=document.getElementById("clearCartMessage");if(e&&n&&a&&r){n.classList.remove("opacity-0","scale-90"),a.classList.add("opacity-50"),e.disabled=!0;try{const e=await fetch(`${api_url}/cart`,{method:"DELETE",headers:{Authorization:`Bearer ${t}`}});e.ok?(cartItems=[],updateCartDisplay(),r.classList.remove("hidden")):console.error("Échec suppression panier:",e.status)}catch(t){console.error("Erreur réseau clearCart:",t)}setTimeout(()=>{const t=document.getElementById("clearCartModal");t&&t.classList.add("hidden"),n.classList.add("opacity-0","scale-90"),a.classList.remove("opacity-50"),e.disabled=!1,r.classList.add("hidden")},1500)}else console.error("Éléments modaux manquants pour clearCart")}function saveLastUrl(){const t=window.location.href;t.includes("/signin")||t.includes("/signup")||localStorage.setItem("last_url",t)}window.removeProduct=function(t){productToRemoveIndex=t;const e=cartItems[t]?.name_latin||"ce produit";document.getElementById("product-name-to-remove").textContent=e,document.getElementById("confirm-modal").classList.remove("hidden")},document.addEventListener("DOMContentLoaded",async()=>{console.log("DOM prêt, on appelle fetchCartItems()"),await fetchCartItems();const t=document.getElementById("btn-open-clear-cart");t&&t.addEventListener("click",()=>{const t=document.getElementById("clearCartModal"),e=document.getElementById("modalContent");t&&e&&(t.classList.remove("hidden"),setTimeout(()=>{e.classList.remove("opacity-0","translate-y-10")},50))});const e=document.getElementById("btn-close-clear-cart");e&&e.addEventListener("click",()=>{const t=document.getElementById("clearCartModal");t&&t.classList.add("hidden")});const n=document.getElementById("btn-confirm-clear-cart");n&&n.addEventListener("click",()=>{clearCart()});const a=document.getElementById("confirm-btn");a&&a.addEventListener("click",async()=>{if(null!==productToRemoveIndex){const t=cartItems[productToRemoveIndex]?.id;await removeProductFromCart(t)&&(cartItems.splice(productToRemoveIndex,1),updateCartDisplay()),document.getElementById("confirm-modal").classList.add("hidden"),productToRemoveIndex=null}});const r=document.getElementById("cancel-btn");r&&r.addEventListener("click",()=>{document.getElementById("confirm-modal").classList.add("hidden"),productToRemoveIndex=null});const o=document.getElementById("request-quote");o&&o.addEventListener("click",async()=>{const t=sessionStorage.getItem("token");t||(saveLastUrl(),window.location.href="/signin");try{const e=await fetch(`${api_url}/quote`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify({notes:"Quote request"})});if(e.ok)alert("Quote request sent successfully!");else{const t=await e.json();console.error("Network error:",t.error)}}catch(t){console.error("Network error:",t)}})}),document.addEventListener("DOMContentLoaded",()=>{const t=sessionStorage.getItem("token"),e=document.getElementById("user-menus");t&&e.classList.remove("hidden")});